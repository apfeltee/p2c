
/* Declarations created by "makeproto" on Tue Jan  5 11:58:04 2016 */

/* Declarations from trans.c */
extern void saveoldfile(char* fname);
extern void closelogfile();
extern void showinitfile();
extern void usage();
extern int main(int argc, char** argv);
extern void exit_failure();
extern void* outmem();
extern int ISBOGUS(char* p);
extern char* meaningkindname(enum meaningkind kind);
extern char* typekindname(enum typekind kind);
extern char* exprkindname(enum exprkind kind);
extern char* stmtkindname(enum stmtkind kind);
extern void dumptype(Type* tp);
extern void dumpmeaning(Meaning* mp);
extern void dumpsymtable(Symbol* sym);
extern void dumptypename(Type* tp, int waddr);
extern void dumptypename_file(FILE* f, Type* tp);
extern void dumpexpr(Expr* ex);
extern void dumpexpr_file(FILE* f, Expr* ex);
extern void innerdumpstmt(Stmt* sp, int indent);
extern void dumpstmt(Stmt* sp, int indent);
extern void dumpstmt_file(FILE* f, Stmt* sp);
extern void wrapup();
extern void mem_summary();
extern anyptr test_malloc(int size, int* total, int* final);
extern void test_free(anyptr p);
extern anyptr test_realloc(anyptr p, int size);

/* Declarations from stuff.c */
extern void debughook();
extern Strlist* strlist_append(Strlist** base, char* s);
extern Strlist* strlist_insert(Strlist** base, char* s);
extern Strlist* strlist_add(Strlist** base, char* s);
extern void strlist_mix(Strlist** base, Strlist* sl);
extern void strlist_eat(Strlist** base);
extern void strlist_empty(Strlist** base);
extern void strlist_remove(Strlist** base, char* s);
extern void strlist_delete(Strlist** base, Strlist* sl);
extern Strlist* strlist_find(Strlist* base, char* s);
extern Strlist* strlist_cifind(Strlist* base, char* s);
extern int strcincmp(char* s1, char* s2, int n);
extern int strcicmp(char* s1, char* s2);
extern void fixfname(char* fn, char* ext);
extern void removesuffix(char* fn);
extern char* stralloc(char* s);
extern void strchange(char** v, char* s);
extern char* format_gen (char* fmt, long i1, long i2, double dbl, char* s1, char* s2, char* s3);
extern char* format_none(char* fmt);
extern char* format_d(char* fmt, long a1);
extern char* format_g(char* fmt, double a1);
extern char* format_s(char* fmt, char* a1);
extern char* format_ss(char* fmt, char* a1, char* a2);
extern char* format_sd(char* fmt, char* a1, long a2);
extern char* format_ds(char* fmt, long a1, char* a2);
extern char* format_dd(char* fmt, long a1, long a2);
extern char* format_sss(char* fmt, char* a1, char* a2, char* a3);
extern char* format_ssd(char* fmt, char* a1, char* a2, long a3);
extern char* format_sds(char* fmt, char* a1, long a2, char* a3);
extern int my_toupper(int c);
extern int my_tolower(int c);
extern void upc(char* s);
extern void lwc(char* s);
extern char* strupper(char* s);
extern char* strlower(char* s);
extern char* my_strchr(char* cp, int c);
extern char* my_strrchr(char* cp, int c);
extern char* my_strtok(char* cp, char* delim);
extern char* my_strtokq(char* cp, char* delim);
extern long my_strtol(char* buf, char** ret, int base);
extern void init_stuff();

/* Declarations from out.c */
extern void setup_out();
extern int grow_outfilebuf();
extern void flush_outfilebuf();
extern void puts_outf(char* s);
extern void select_outfile(FILE* fp);
extern void start_source();
extern void end_source();
extern int line_start();
extern int cur_column();
extern int lookback(int n);
extern int lookback_prn(int n);
extern int adddeltas(int d1, int d2);
extern int applydelta(int i, int d);
extern void moreindent(int delta);
extern void singleindent(int delta);
extern void futureindent(int num);
extern int parsedelta(char* cp, int def);
extern void eatblanklines();
extern int parse_breakstr(char* cp);
extern long getcurtime();
extern void output(char* msg);
extern void out_n_spaces(int n);
extern void out_spaces(int spc, int over, int len, int delta);
extern void testlinebreaker(int lev, char* fn);
extern void outsection(int size);
extern int isembedcomment(Strlist* cmt);
extern Strlist* outcomments(Strlist* cmt);
extern void outcomment(Strlist* cmt);
extern void outtrailcomment(Strlist* cmt, int serial, int indent);
extern void flushcomments(Strlist** cmt, int kind, int serial);
extern char* rawCstring(char* fmt, char* s, int len, int special);
extern char* makeCstring(char* s, int len);
extern char* makeCchar(int ich);

/* Declarations from comment.c */
extern void setup_comment();
extern int commentlen(Strlist* cmt);
extern int commentvisible(Strlist* cmt);
extern void steal_comments(long olds, long news, int always);
extern Strlist* fixbeginendcomment(Strlist* cmt);
extern void attach_comments(Stmt* sbase);
extern void setcommentkind(Strlist* cmt, int kind);
extern void commentline(int kind);
extern void addnote(char* msg, long serial);
extern Strlist* grabcomment(int kind);
extern int matchcomment(Strlist* cmt, int kind, long stamp);
extern Strlist* findcomment(Strlist* cmt, int kind, long stamp);
extern Strlist* extractcomment(Strlist** cmt, int kind, long stamp);
extern void changecomments (Strlist * cmt, int okind, long ostamp, int kind, long stamp);

/* Declarations from lex.c */
extern char* fixpascalname(char* name);
extern void init_lex();
extern void setup_lex();
extern int checkeatnote(char* msg);
extern void beginerror();
extern void counterror();
extern void error(char* msg);
extern void interror(char* proc, char* msg);
extern void warning(char* msg);
extern void intwarning(char* proc, char* msg);
extern void note(char* msg);
extern void endnote(char* msg);
extern void showendnotes();
extern char* tok_name(Token tok);
extern void expected(char* msg);
extern void expecttok(Token tok);
extern void needtok(Token tok);
extern int wexpected(char* msg);
extern int wexpecttok(Token tok);
extern int wneedtok(Token tok);
extern void alreadydef(Symbol* sym);
extern void undefsym(Symbol* sym);
extern void symclass(Symbol* sym);
extern void badtypes();
extern void valrange();
extern void skipparens();
extern void skiptotoken2(Token tok1, Token tok2);
extern void skippasttoken2(Token tok1, Token tok2);
extern void skippasttotoken(Token tok1, Token tok2);
extern void skiptotoken(Token tok);
extern void skippasttoken(Token tok);
extern int skipopenparen();
extern int skipcloseparen();
extern int skipcomma();
extern char* findaltname(char* name, int num);
extern Symbol* findsymbol_opt(char* name);
extern Symbol* findsymbol(char* name);
extern void clearprogress();
extern void progress();
extern void replacestrings(char* buf, Strlist* sl);
extern void getlinep();
extern void push_input_file(FILE* fp, char* fname, int isinclude);
extern void include_as_import();
extern void push_input_strlist(Strlist* sp, char* fname);
extern void pop_input();
extern int undooption(int i, char* name);
extern void badinclude();
extern int handle_include(char* fn);
extern int turbo_directive(const char* closing, char* after);
extern void defmacro (char* name, long kind, char* fname, int lnum);
extern void check_unused_macros();
extern char* getinlinepart();
extern char getchartok();
extern char* getparenstr(char* buf);
extern void leadingcomments();
extern void get_C_string(int term);
extern void begincommenting(char* cp);
extern void saveinputcomment(char* cp);
extern void endcommenting(char* cp);
extern char* peeknextptr();
extern int peeknextchar();
extern int peeknextword(char* word);
extern void gettok();
extern void checkkeyword(Token tok);
extern void checkmodulewords();

/* Declarations from parse.c */
extern void setup_parse();
extern void echobreak();
extern void echoword(char* name, int comma);
extern void echoprocname(Meaning* mp);
extern void need_forward_decl(Meaning* func);
extern void free_stmt(Stmt* sp);
extern Stmt* makestmt(enum stmtkind kind);
extern Stmt* makestmt_call(Expr* call);
extern Stmt* makestmt_assign(Expr* lhs, Expr* rhs);
extern Stmt* makestmt_if(Expr* cond, Stmt* thn, Stmt* els);
extern Stmt* makestmt_seq(Stmt* s1, Stmt* s2);
extern Stmt* copystmt(Stmt* sp);
extern void nukestmt(Stmt* sp);
extern void splicestmt(Stmt* sp, Stmt* spnew);
extern int stmtcount(Stmt* sp);
extern Stmt* close_files_to_ctx(Meaning* ctx);
extern void withrecordtype(Type* tp, Expr* ex);
extern int simplewith(Expr* ex);
extern int simplefor(Stmt* sp, Expr* ex);
extern int tryfuncmacro(Expr** exp, Meaning* mp);
extern Expr* replaceexprexpr (Expr * ex, Expr* oldex, Expr* newex, int keeptype);
extern void replaceexpr(Stmt* sp, Expr* oldex, Expr* newex);
extern Stmt* mixassignments(Stmt* sp, Meaning* mp);
extern int expr_is_bool(Expr* ex, int want);
extern int implies(Expr* c1, Expr* c2, int not1, int not2);
extern void infiniteloop(Stmt* sp);
extern Expr* print_func(Expr* ex);
extern int printnl_func(Expr* ex);
extern Expr* chg_printf(Expr* ex);
extern Expr* mix_printf(Expr* ex, Expr* ex2);
extern int proveexprprop(Expr* ex, Stmt* sp, int prop);
extern Expr* flow_fixexpr(Expr* ex, Stmt* sp, int env);
extern void flowblock(Stmt* sp);
extern void eatstmt(Stmt** spp);
extern int haslabels(Stmt* sp);
extern void fixblock(Stmt** spp, Stmt* thereturn);
extern int checkvarchangedexpr(Expr* ex, Meaning* mp, int addrokay);
extern int checkvarchanged(Stmt* sp, Meaning* mp);
extern int checkexprchanged(Stmt* sp, Expr* ex);
extern void checkvaroffsetexpr(Expr* ex, Meaning* mp, int myoffset);
extern void checkvaroffsetstmt(Stmt* sp, Meaning* mp);
extern int checkvaroffset(Stmt* sp, Meaning* mp);
extern Expr* initfilevar(Expr* ex);
extern void initfilevars(Meaning* mp, Stmt*** sppp, Expr* exbase);
extern void movetoend(Meaning* mp);
extern void do_include(Token blkind);
extern void p_block(Token blkind);
extern int p_search(char* fname, char* ext, int need);
extern void p_program();

/* Declarations from decl.c */
extern Meaning* makespecialproc(char* name, Stmt* (*handler)());
extern Meaning* makestandardproc(char* name, Stmt* (*handler)());
extern Meaning* makespecialfunc(char* name, Expr* (*handler)());
extern Meaning* makestandardfunc(char* name, Expr* (*handler)());
extern Meaning* makespecialvar(char* name, Expr* (*handler)());
extern void setup_decl();
extern int push_imports();
extern void pop_imports(int mark);
extern void import_ctx(Meaning* ctx);
extern void perm_import(Meaning* ctx);
extern void unimport(int mark);
extern void activatemeaning(Meaning* mp);
extern void pushctx(Meaning* ctx);
extern void popctx();
extern void forget_ctx(Meaning* ctx, int all);
extern void handle_nameof();
extern int issafename (Symbol * sp, int isglobal, int isdefine, int isfield);
extern void setupmeaning (Meaning * mp, Symbol* sym, enum meaningkind kind, enum meaningkind namekind);
extern Meaning* addmeaningas (Symbol * sym, enum meaningkind kind, enum meaningkind namekind);
extern Meaning* addmeaning(Symbol* sym, enum meaningkind kind);
extern Meaning* addmeaningafter (Meaning * mpprev, Symbol* sym, enum meaningkind kind);
extern void unaddmeaning(Meaning* mp);
extern void readdmeaning(Meaning* mp);
extern Meaning* addfield (Symbol * sym, Meaning*** flast, Type* rectype, Meaning* tname);
extern int isfiletype(Type* type, int big);
extern int israndomfile(Type* type);
extern Meaning* isfilevar(Expr* ex);
extern Type* filebasetype(Type* type);
extern Expr* filebasename(Expr* ex);
extern Expr* filenamepart(Expr* ex);
extern int fileisbuffered(Expr* ex, int maybe);
extern Type* findbasetype_(Type* type, int flags);
extern Type* findbasetype(Type* type, int flags);
extern Expr* arraysize(Type* tp, int incskipped);
extern Type* promote_type(Type* tp);
extern Type* promote_type_bin(Type* t1, Type* t2);
extern void predeclare_varstruct(Meaning* mp);
extern void outdeclarator(Type* type, char* name, int flags);
extern Type* canonicaltype(Type* type);
extern int identicaltypes(Type* t1, Type* t2);
extern int similartypes(Type* t1, Type* t2);
extern int tinyexpr(Expr* ex);
extern void declarefiles(Strlist* fnames);
extern char* variantfieldname(int num);
extern int record_is_union(Type* tp);
extern void outfieldlist(Meaning* mp);
extern void declarebigfile(Type* type);
extern void outbasetype(Type* type, int flags);
extern void out_type(Type* type, int flags);
extern int onewordstring(char* cp);
extern int onewordtype(Type* type, int flags);
extern int varstorageclass(Meaning* mp);
extern char* storageclassname(int i);
extern void declarevar(Meaning* mp, int which);
extern int checkvarmac(Meaning* mp);
extern int declarevars(Meaning* ctx, int invarstruct);
extern void redeclarevars(Meaning* ctx);
extern void out_argdecls(Type* ftype);
extern void makevarstruct(Meaning* func);
extern Type* maketype(enum typekind kind);
extern Type* makesubrangetype(Type* type, Expr* smin, Expr* smax);
extern Type* makesettype(Type* setof);
extern Type* makestringtype(int len);
extern Type* makepointertype(Type* type);
extern Value p_constant(Type* type);
extern int typebits(long smin, long smax);
extern int packedsize (char* fname, Type** typep, long* sizep, int mode);
extern void decl_comments(Meaning* mp);
extern void makestructtag(Type* type, char* tname);
extern void p_attributes();
extern void ignore_attributes();
extern int size_attributes();
extern void p_mech_spec(int doref);
extern Type* p_modula_subrange(Type* basetype);
extern void makefakestruct(Type* tp, Meaning* tname);
extern Type* p_type(Meaning* tname);
extern Type* p_funcdecl(int* isfunc, int istype);
extern Symbol* findlabelsym();
extern void p_labeldecl();
extern Meaning* findfieldname (Symbol * sym, Meaning** variants, int* nvars);
extern Expr* p_constrecord(Type* type, int style);
extern Expr* p_constarray(Type* type, int style);
extern Expr* p_conststring(Type* type, int style);
extern Expr* p_subconst(Type* type, int style);
extern void p_constdecl();
extern void declaresubtypes(Meaning* mp);
extern void declaretype(Meaning* mp);
extern int preservetype(Type* type);
extern void declaretypes(int outflag);
extern void p_typedecl();
extern void setupfilevar(Meaning* mp);
extern Meaning* validatedtype(Meaning* dtype, Type* type);
extern void p_vardecl(int iscommon);
extern void p_commondecl();
extern void p_valuedecl();
extern Meaning* maketempvar(Type* type, char* name);
extern Meaning* makestmttempvar(Type* type, char* name);
extern Meaning* markstmttemps();
extern void freestmttemps(Meaning* mark);
extern void freetempvar(Meaning* tvar);
extern void canceltempvar(Meaning* tvar);

/* Declarations from expr.c */
extern void free_value(Value* val);
extern Value copyvalue(Value val);
extern int valuesame(Value a, Value b);
extern char* value_name(Value val, char* intfmt, int islong);
extern Value value_cast(Value val, Type* type);
extern Type* ord_type(Type* tp);
extern int long_type(Type* tp);
extern Value make_ord(Type* type, long i);
extern long ord_value(Value val);
extern void ord_range_expr(Type* type, Expr** smin, Expr** smax);
extern int ord_range(Type* type, long* smin, long* smax);
extern void freeexpr(Expr* ex);
extern Expr* makeexpr(enum exprkind kind, int n);
extern Expr* makeexpr_un (enum exprkind kind, Type* type, Expr* arg1);
extern Expr* makeexpr_bin (enum exprkind kind, Type* type, Expr* arg1, Expr* arg2);
extern Expr* makeexpr_val(Value val);
extern Expr* makeexpr_char(int c);
extern Expr* makeexpr_long(long i);
extern Expr* makeexpr_real(char* r);
extern Expr* makeexpr_lstring(char* msg, int len);
extern Expr* makeexpr_string(char* msg);
extern int checkstring(Expr* ex, char* msg);
extern Expr* makeexpr_var(Meaning* mp);
extern Expr* makeexpr_name(char* name, Type* type);
extern Expr* makeexpr_setbits();
extern Expr* makeexpr_bicall_0(char* name, Type* type);
extern Expr* makeexpr_bicall_1(char* name, Type* type, Expr* arg1);
extern Expr* makeexpr_bicall_2 (char* name, Type* type, Expr* arg1, Expr* arg2);
extern Expr* makeexpr_bicall_3 (char* name, Type* type, Expr* arg1, Expr* arg2, Expr* arg3);
extern Expr* makeexpr_bicall_4 (char* name, Type* type, Expr* arg1, Expr* arg2, Expr* arg3, Expr* arg4);
extern Expr*
makeexpr_bicall_5 (char* name, Type* type, Expr* arg1, Expr* arg2, Expr* arg3, Expr* arg4, Expr* arg5);
extern Expr* makeexpr_SETIO(Expr* flag, char* code, Expr* name);
extern Expr* copyexpr(Expr* ex);
extern int exprsame(Expr* a, Expr* b, int strict);
extern int exprequiv(Expr* a, Expr* b);
extern void deletearg(Expr** ex, int n);
extern void insertarg(Expr** ex, int n, Expr* arg);
extern Expr* grabarg(Expr* ex, int n);
extern void delsimparg(Expr** ep, int n);
extern Expr* resimplify(Expr* ex);
extern int realzero(char* s);
extern int realint(char* s, int i);
extern int checkconst(Expr* ex, long val);
extern int isliteralconst(Expr* ex, Value* valp);
extern int isconstexpr(Expr* ex, long* valp);
extern int isconstantexpr(Expr* ex);
extern Expr* makeexpr_actcast(Expr* a, Type* type);
extern Expr* makeexpr_cast(Expr* a, Type* type);
extern Expr* gentle_cast(Expr* a, Type* type);
extern Expr* makeexpr_charcast(Expr* ex);
extern Expr* makeexpr_stringcast(Expr* ex);
extern int exprlongness(Expr* ex);
extern Expr* makeexpr_longcast(Expr* a, int tolong);
extern Expr* makeexpr_arglong(Expr* a, int tolong);
extern Expr* makeexpr_unlongcast(Expr* a);
extern Expr* makeexpr_forcelongness(Expr* a);
extern Expr* makeexpr_ord(Expr* ex);
extern int expr_looks_neg(Expr* ex);
extern int expr_is_neg(Expr* ex);
extern int expr_neg_cost(Expr* a);
extern Expr* enum_to_int(Expr* a);
extern Expr* neg_inside_sum(Expr* a);
extern Expr* makeexpr_neg(Expr* a);
extern Type* true_type(Expr* ex);
extern int ischartype(Expr* ex);
extern Expr* makeexpr_plus(Expr* a, Expr* b);
extern Expr* makeexpr_minus(Expr* a, Expr* b);
extern Expr* makeexpr_inc(Expr* a, Expr* b);
extern Expr* distribute_plus(Expr* ex);
extern Expr* makeexpr_times(Expr* a, Expr* b);
extern Expr* makeexpr_sqr(Expr* ex, int cube);
extern Expr* makeexpr_divide(Expr* a, Expr* b);
extern int gcd(int a, int b);
extern int negsigns(int mask);
extern int possiblesigns(Expr* ex);
extern Expr* dodivmod (char* funcname, enum exprkind ekind, Expr* a, Expr* b);
extern Expr* makeexpr_div(Expr* a, Expr* b);
extern Expr* makeexpr_mod(Expr* a, Expr* b);
extern Expr* makeexpr_rem(Expr* a, Expr* b);
extern int expr_not_cost(Expr* a);
extern Expr* makeexpr_not(Expr* a);
extern Type* mixsets(Expr** ep1, Expr** ep2);
extern Meaning* istempprocptr(Expr* ex);
extern Expr* makeexpr_stringify(Expr* ex);
extern Expr* makeexpr_rel(enum exprkind rel, Expr* a, Expr* b);
extern Expr* makeexpr_and(Expr* a, Expr* b);
extern Expr* makeexpr_or(Expr* a, Expr* b);
extern Expr* makeexpr_range (Expr * ex, Expr* exlow, Expr* exhigh, int higheq);
extern Expr* makeexpr_cond(Expr* c, Expr* a, Expr* b);
extern int expr_is_lvalue(Expr* ex);
extern int expr_has_address(Expr* ex);
extern Expr* checknil(Expr* ex);
extern int checkvarinlists (Strlist * yes, Strlist* no, int def, Meaning* mp);
extern void requirefilebuffer(Expr* ex);
extern Expr* makeexpr_hat(Expr* a, int check);
extern Expr* un_sign_extend(Expr* a);
extern Expr* makeexpr_addr(Expr* a);
extern Expr* makeexpr_addrstr(Expr* a);
extern Expr* makeexpr_addrf(Expr* a);
extern Expr* makeexpr_index(Expr* a, Expr* b, Expr* offset);
extern Expr* makeexpr_type(Type* type);
extern Expr* makeexpr_sizeof(Expr* ex, int incskipped);
extern int exprspeed(Expr* ex);
extern int noargdependencies(Expr* ex, int vars);
extern int nodependencies(Expr* ex, int vars);
extern int exprdependsvar(Expr* ex, Meaning* mp);
extern int exprdepends(Expr* ex, Expr* ex2);
extern int nosideeffects_func(Expr* ex);
extern int deterministic_func(Expr* ex);
extern int noargsideeffects(Expr* ex, int mode);
extern int nosideeffects(Expr* ex, int mode);
extern int exproccurs(Expr* ex, Expr* ex2);
extern Expr* singlevar(Expr* ex);
extern int structuredfunc(Expr* ex);
extern int strlapfunc(Expr* ex);
extern Meaning* istempvar(Expr* ex);
extern Meaning* totempvar(Expr* ex);
extern Meaning* isretvar(Expr* ex);
extern Expr* bumpstring(Expr* ex, Expr* index, int offset);
extern long po2m1(int n);
extern int isarithkind(enum exprkind kind);
extern Expr* makeexpr_assign(Expr* a, Expr* b);
extern Expr* makeexpr_comma(Expr* a, Expr* b);
extern int strmax(Expr* ex);
extern int strhasnull(Value val);
extern int istempsprintf(Expr* ex);
extern Expr* makeexpr_sprintfify(Expr* ex);
extern Expr* makeexpr_unsprintfify(Expr* ex);
extern int sprintflength(Expr* ex, int allownulls);
extern Expr* makeexpr_concat(Expr* a, Expr* b, int usesprintf);
extern Expr* cleansprintf(Expr* ex);
extern Expr* makeexpr_substring (Expr * vex, Expr* ex, Expr* exi, Expr* exj);
extern Expr* makeexpr_dot(Expr* ex, Meaning* mp);
extern Expr* makeexpr_dotq(Expr* ex, char* name, Type* type);
extern Expr* strmax_func(Expr* ex);
extern Expr* makeexpr_nil();
extern Expr* makeexpr_ctx(Meaning* ctx);
extern Expr* force_signed(Expr* ex);
extern Expr* force_unsigned(Expr* ex);
extern long type_sizeof(Type* type, int pasc);
extern Value eval_expr(Expr* ex);
extern Value eval_expr_consts(Expr* ex);
extern Value eval_expr_pasc(Expr* ex);
extern int expr_is_const(Expr* ex);
extern Expr* eatcasts(Expr* ex);

/* Declarations from pexpr.c */
extern Expr* dots_n_hats(Expr* ex, Type* target);
extern Expr* p_index(Expr* ex, Expr* ex2);
extern Expr* fake_dots_n_hats(Expr* ex);
extern void var_reference(Meaning* mp);
extern Expr* expr_reference(Expr* ex);
extern Expr* p_variable(Type* target);
extern Expr* p_ord_expr();
extern Expr* packset(Expr* ex, Type* type);
extern Expr* p_setfactor(Type* target, int sure);
extern Expr* p_funcarglist (Expr * ex, Meaning* args, int firstarg, int ismacro);
extern Expr* replacemacargs(Expr* ex, Expr* fex);
extern Expr* p_noarglist(Expr* ex, Meaning* mp, Meaning* args);
extern void func_reference(Meaning* func);
extern Expr* p_memcall(Expr* expr, Meaning* mp);
extern Expr* p_funccall(Meaning* mp);
extern Expr* accumulate_strlit();
extern Expr* pascaltypecast(Type* type, Expr* ex2);
extern Expr* p_sexpr(Type* target);
extern Expr* p_rexpr(Type* target);
extern Expr* p_andexpr(Type* target);
extern Expr* p_expr(Type* target);
extern Type* nametotype(char* name);
extern int istypespec(int iscast);
extern Expr* pc_parentype(char* cp);
extern Expr* pc_typename();
extern Expr* pc_factor();
extern Expr* pc_expr2(int prec);
extern Expr* pc_expr();
extern Expr* pc_expr_str(char* buf);
extern Expr* fixexpr(Expr* ex, int env);
extern void out_var(Meaning* mp, int prec);
extern void out_field(Meaning* mp);
extern void out_expr(Expr* ex);
extern void out_expr_top(Expr* ex);
extern void out_expr_factor(Expr* ex);
extern void out_expr_parens(Expr* ex);
extern void out_expr_stmt(Expr* ex);
extern void out_expr_bool(Expr* ex);

/* Declarations from funcs.c */
extern void setup_funcs();
extern int isvar(Expr* ex, Meaning* mp);
extern char* getstring(Expr* ex);
extern Expr* p_parexpr(Type* target);
extern Type* argbasetype(Expr* ex);
extern Type* choosetype(Type* t1, Type* t2);
extern Expr* convert_offset(Type* type, Expr* ex2);
extern Expr* convert_size(Type* type, Expr* ex, char* name);
extern Stmt* proc_assert();
extern Stmt* wrapopencheck(Stmt* sp, Expr* fex);
extern void parse_special_variant(Type* tp, char* buf);
extern char* find_special_variant (char* buf, char* spname, Strlist* splist, int need);
extern int is_std_file(Expr* ex);
extern Stmt* proc_exit();
extern Stmt* doseek(Expr* fex, Expr* ex);
extern Expr* writeelement (Expr * ex, Expr* wid, Expr* prec, int base);
extern void decl_builtins();

/* Declarations from dir.c */
extern void init_dir();
extern void setup_dir();
extern void setup_module(char* name, int defn);
extern void fix_parameters();
extern Stmt* fix_statement(Stmt* sp);
extern Expr* fix_expression(Expr* ex, int env);
extern Expr* fix_bicall(Expr* ex, int env);
extern int boolean_bicall(char* name);
extern unsigned int safemask_bicall(char* name);
extern int sideeffects_bicall(char* name);

/* Declarations from hpmods.c */
extern void hpmods(char* name, int defn);

/* Declarations from citmods.c */
extern void citmods(char* name, int defn);

/* End. */
